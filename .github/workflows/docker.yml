---
name: Build docker image

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Branch and image name
        id: extract_names
        shell: bash
        run: |
          echo "##[set-output name=branch_name;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "##[set-output name=image_name;]$(echo ${GITHUB_REPOSITORY#streamingfast/})"          

      - name: Generate docker tags/labels from github build context
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ steps.extract_names.outputs.image_name }}
          tags: |
            type=ref,event=tag
            type=sha,prefix=,enable=${{ startsWith(github.ref, 'refs/heads/') }}
            type=raw,enable=${{ startsWith(github.ref, 'refs/heads/') }},value=${{ steps.extract_names.outputs.branch_name }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  slack-notifications:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        uses: Ilshidur/action-slack@2.0.2
        with:
          args: |
            :done: *${{ github.repository }}* Success building docker images from ${{ github.ref_type }} _${{ github.ref_name }}_ (${{ github.actor }}) :sparkling_heart: ```${{ join(needs.build-vanilla.outputs.tags, ' ') }}```
